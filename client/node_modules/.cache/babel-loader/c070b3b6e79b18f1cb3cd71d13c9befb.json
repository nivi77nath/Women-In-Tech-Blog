{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nivin\\\\Desktop\\\\Projects\\\\React\\\\WITblog\\\\MERNstackProj\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'; // import FileBase from 'react-file-base64';\n\nimport useStyles from './stylesForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts'; //To update, we've to somehow get the id of the post we're on, you'll have to get that from the post component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    details: '',\n    deadline: '',\n    tags: '',\n    selectedFile: '' //this is for the image which will be converted to a base64 string\n\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //once the action is dispatched here, go to the reducers\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#470465',\n      padding: '10px'\n    },\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            marginBottom: '10px',\n            color: '#470465'\n          },\n          variant: \"h6\",\n          children: \"Creating a post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"creator\",\n          variant: \"outlined\",\n          label: \"Creator\",\n          style: {\n            width: '90%'\n          },\n          value: postData.creator,\n          onChange: e => setPostData({ ...postData,\n            creator: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          style: {\n            width: '90%'\n          },\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"details\",\n          variant: \"outlined\",\n          label: \"Details\",\n          style: {\n            width: '90%'\n          },\n          value: postData.details,\n          onChange: e => setPostData({ ...postData,\n            details: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags\",\n          style: {\n            width: '90%'\n          },\n          value: postData.tags,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"deadline\",\n          variant: \"outlined\",\n          label: \"Deadline\",\n          style: {\n            width: '90%'\n          },\n          value: postData.deadline,\n          onChange: e => setPostData({ ...postData,\n            deadline: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.buttonSubmit,\n            onClick: handleSubmit,\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            type: \"submit\",\n            fullwidth: true,\n            children: \"Add Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.buttonSubmit,\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"large\",\n            type: \"submit\",\n            onClick: clear,\n            fullwidth: true,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"BmwvogzVfr257o2PZ7ikb45hc9M=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form; //to add the post to the database, go to api and make a post request using axios \n// <div className={classes.fileInput}>\n// <FileBase \n//     type=\"file\"\n//     multiple={false}\n//     onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\n// />\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/nivin/Desktop/Projects/React/WITblog/MERNstackProj/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useStyles","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","details","deadline","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","backgroundColor","padding","paper","root","form","marginBottom","color","width","target","value","buttons","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\n// import FileBase from 'react-file-base64';\r\nimport useStyles from './stylesForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {createPost, updatePost} from '../../actions/posts';\r\n\r\n\r\n//To update, we've to somehow get the id of the post we're on, you'll have to get that from the post component\r\n\r\nfunction Form({currentId, setCurrentId}) {\r\n\r\n    const [postData, setPostData] = useState({\r\n        creator:'',\r\n        title:'',\r\n        details:'',\r\n        deadline:'',\r\n        tags:'',\r\n        selectedFile:'' //this is for the image which will be converted to a base64 string\r\n    })\r\n\r\n    const post = useSelector((state) => currentId? state.posts.find((p) => p._id === currentId): null);\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        //once the action is dispatched here, go to the reducers\r\n\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, postData));\r\n        }\r\n        else{\r\n            dispatch(createPost(postData));\r\n        }\r\n    }\r\n\r\n    const clear = () =>{\r\n\r\n    } \r\n\r\n    return (\r\n        <div style={{backgroundColor: '#470465', padding:'10px'}} id=\"form\">\r\n            <Paper className={classes.paper}>\r\n                <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                    <Typography style={{marginBottom: '10px',  color: '#470465'}}   variant=\"h6\">Creating a post</Typography>\r\n                    <TextField\r\n                        name=\"creator\"\r\n                        variant=\"outlined\"\r\n                        label=\"Creator\"\r\n                        style={{width: '90%'}}\r\n                        value={postData.creator}\r\n                        onChange={(e) => setPostData({...postData, creator: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"title\"\r\n                        variant=\"outlined\"\r\n                        label=\"Title\"\r\n                        style={{width: '90%'}}\r\n                        value={postData.title}\r\n                        onChange={(e) => setPostData({...postData, title: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"details\"\r\n                        variant=\"outlined\"\r\n                        label=\"Details\"\r\n                        style={{width: '90%'}}\r\n                        value={postData.details}\r\n                        onChange={(e) => setPostData({...postData, details: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"tags\"\r\n                        variant=\"outlined\"\r\n                        label=\"Tags\"\r\n                        style={{width: '90%'}}\r\n                        value={postData.tags}\r\n                        onChange={(e) => setPostData({...postData, tags: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"deadline\"\r\n                        variant=\"outlined\"\r\n                        label=\"Deadline\"\r\n                        style={{width: '90%'}}\r\n                        value={postData.deadline}\r\n                        onChange={(e) => setPostData({...postData, deadline: e.target.value})}\r\n                    />\r\n\r\n                  \r\n                    <div className={classes.buttons}>\r\n                        <Button className={classes.buttonSubmit} onClick={handleSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullwidth>\r\n                            Add Post\r\n                        </Button>\r\n                        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"secondary\" size=\"large\" type=\"submit\" onClick={clear} fullwidth>\r\n                            Clear\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n//to add the post to the database, go to api and make a post request using axios \r\n\r\n\r\n\r\n// <div className={classes.fileInput}>\r\n// <FileBase \r\n//     type=\"file\"\r\n//     multiple={false}\r\n//     onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\r\n// />\r\n// </div>\r\n"]},"metadata":{},"sourceType":"module"}