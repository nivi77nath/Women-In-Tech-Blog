{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar tslib = require('tslib');\n\nvar clamp = function (min, max) {\n  return function (v) {\n    return Math.max(Math.min(v, max), min);\n  };\n};\n\nvar sanitize = function (v) {\n  return v % 1 ? Number(v.toFixed(5)) : v;\n};\n\nvar floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))/gi;\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))$/i;\n\nfunction isString(v) {\n  return typeof v === 'string';\n}\n\nvar number = {\n  test: function (v) {\n    return typeof v === 'number';\n  },\n  parse: parseFloat,\n  transform: function (v) {\n    return v;\n  }\n};\n\nvar alpha = tslib.__assign(tslib.__assign({}, number), {\n  transform: clamp(0, 1)\n});\n\nvar scale = tslib.__assign(tslib.__assign({}, number), {\n  default: 1\n});\n\nvar createUnitType = function (unit) {\n  return {\n    test: function (v) {\n      return isString(v) && v.endsWith(unit) && v.split(' ').length === 1;\n    },\n    parse: parseFloat,\n    transform: function (v) {\n      return \"\" + v + unit;\n    }\n  };\n};\n\nvar degrees = createUnitType('deg');\nvar percent = createUnitType('%');\nvar px = createUnitType('px');\nvar vh = createUnitType('vh');\nvar vw = createUnitType('vw');\n\nvar progressPercentage = tslib.__assign(tslib.__assign({}, percent), {\n  parse: function (v) {\n    return percent.parse(v) / 100;\n  },\n  transform: function (v) {\n    return percent.transform(v * 100);\n  }\n});\n\nvar isColorString = function (type, testProp) {\n  return function (v) {\n    return Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));\n  };\n};\n\nvar splitColor = function (aName, bName, cName) {\n  return function (v) {\n    var _a;\n\n    if (!isString(v)) return v;\n\n    var _b = v.match(floatRegex),\n        a = _b[0],\n        b = _b[1],\n        c = _b[2],\n        alpha = _b[3];\n\n    return _a = {}, _a[aName] = parseFloat(a), _a[bName] = parseFloat(b), _a[cName] = parseFloat(c), _a.alpha = alpha !== undefined ? parseFloat(alpha) : 1, _a;\n  };\n};\n\nvar hsla = {\n  test: isColorString('hsl', 'hue'),\n  parse: splitColor('hue', 'saturation', 'lightness'),\n  transform: function (_a) {\n    var hue = _a.hue,\n        saturation = _a.saturation,\n        lightness = _a.lightness,\n        _b = _a.alpha,\n        alpha$1 = _b === void 0 ? 1 : _b;\n    return 'hsla(' + Math.round(hue) + ', ' + percent.transform(sanitize(saturation)) + ', ' + percent.transform(sanitize(lightness)) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\nvar clampRgbUnit = clamp(0, 255);\n\nvar rgbUnit = tslib.__assign(tslib.__assign({}, number), {\n  transform: function (v) {\n    return Math.round(clampRgbUnit(v));\n  }\n});\n\nvar rgba = {\n  test: isColorString('rgb', 'red'),\n  parse: splitColor('red', 'green', 'blue'),\n  transform: function (_a) {\n    var red = _a.red,\n        green = _a.green,\n        blue = _a.blue,\n        _b = _a.alpha,\n        alpha$1 = _b === void 0 ? 1 : _b;\n    return 'rgba(' + rgbUnit.transform(red) + ', ' + rgbUnit.transform(green) + ', ' + rgbUnit.transform(blue) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\n\nfunction parseHex(v) {\n  var r = '';\n  var g = '';\n  var b = '';\n  var a = '';\n\n  if (v.length > 5) {\n    r = v.substr(1, 2);\n    g = v.substr(3, 2);\n    b = v.substr(5, 2);\n    a = v.substr(7, 2);\n  } else {\n    r = v.substr(1, 1);\n    g = v.substr(2, 1);\n    b = v.substr(3, 1);\n    a = v.substr(4, 1);\n    r += r;\n    g += g;\n    b += b;\n    a += a;\n  }\n\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: a ? parseInt(a, 16) / 255 : 1\n  };\n}\n\nvar hex = {\n  test: isColorString('#'),\n  parse: parseHex,\n  transform: rgba.transform\n};\nvar color = {\n  test: function (v) {\n    return rgba.test(v) || hex.test(v) || hsla.test(v);\n  },\n  parse: function (v) {\n    if (rgba.test(v)) {\n      return rgba.parse(v);\n    } else if (hsla.test(v)) {\n      return hsla.parse(v);\n    } else {\n      return hex.parse(v);\n    }\n  },\n  transform: function (v) {\n    return isString(v) ? v : v.hasOwnProperty('red') ? rgba.transform(v) : hsla.transform(v);\n  }\n};\nvar colorToken = '${c}';\nvar numberToken = '${n}';\n\nfunction test(v) {\n  var _a, _b, _c, _d;\n\n  return isNaN(v) && isString(v) && ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;\n}\n\nfunction analyse(v) {\n  var values = [];\n  var numColors = 0;\n  var colors = v.match(colorRegex);\n\n  if (colors) {\n    numColors = colors.length;\n    v = v.replace(colorRegex, colorToken);\n    values.push.apply(values, colors.map(color.parse));\n  }\n\n  var numbers = v.match(floatRegex);\n\n  if (numbers) {\n    v = v.replace(floatRegex, numberToken);\n    values.push.apply(values, numbers.map(number.parse));\n  }\n\n  return {\n    values: values,\n    numColors: numColors,\n    tokenised: v\n  };\n}\n\nfunction parse(v) {\n  return analyse(v).values;\n}\n\nfunction createTransformer(v) {\n  var _a = analyse(v),\n      values = _a.values,\n      numColors = _a.numColors,\n      tokenised = _a.tokenised;\n\n  var numValues = values.length;\n  return function (v) {\n    var output = tokenised;\n\n    for (var i = 0; i < numValues; i++) {\n      output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n    }\n\n    return output;\n  };\n}\n\nvar convertNumbersToZero = function (v) {\n  return typeof v === 'number' ? 0 : v;\n};\n\nfunction getAnimatableNone(v) {\n  var parsed = parse(v);\n  var transformer = createTransformer(v);\n  return transformer(parsed.map(convertNumbersToZero));\n}\n\nvar complex = {\n  test: test,\n  parse: parse,\n  createTransformer: createTransformer,\n  getAnimatableNone: getAnimatableNone\n};\nvar maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\n\nfunction applyDefaultFilter(v) {\n  var _a = v.slice(0, -1).split('('),\n      name = _a[0],\n      value = _a[1];\n\n  if (name === 'drop-shadow') return v;\n  var number = (value.match(floatRegex) || [])[0];\n  if (!number) return v;\n  var unit = value.replace(number, '');\n  var defaultValue = maxDefaults.has(name) ? 1 : 0;\n  if (number !== value) defaultValue *= 100;\n  return name + '(' + defaultValue + unit + ')';\n}\n\nvar functionRegex = /([a-z-]*)\\(.*?\\)/g;\n\nvar filter = tslib.__assign(tslib.__assign({}, complex), {\n  getAnimatableNone: function (v) {\n    var functions = v.match(functionRegex);\n    return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n  }\n});\n\nexports.alpha = alpha;\nexports.color = color;\nexports.complex = complex;\nexports.degrees = degrees;\nexports.filter = filter;\nexports.hex = hex;\nexports.hsla = hsla;\nexports.number = number;\nexports.percent = percent;\nexports.progressPercentage = progressPercentage;\nexports.px = px;\nexports.rgbUnit = rgbUnit;\nexports.rgba = rgba;\nexports.scale = scale;\nexports.vh = vh;\nexports.vw = vw;","map":{"version":3,"sources":["C:/Users/nivin/Desktop/Projects/React/WITblog/MERNstackProj/client/node_modules/style-value-types/dist/valueTypes.cjs.js"],"names":["Object","defineProperty","exports","value","tslib","require","clamp","min","max","v","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","number","test","parse","parseFloat","transform","alpha","__assign","scale","default","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","isColorString","type","testProp","Boolean","startsWith","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","_a","_b","match","a","b","c","undefined","hsla","hue","saturation","lightness","alpha$1","round","clampRgbUnit","rgbUnit","rgba","red","green","blue","parseHex","r","g","substr","parseInt","hex","color","colorToken","numberToken","_c","_d","isNaN","analyse","values","numColors","colors","replace","push","apply","map","numbers","tokenised","createTransformer","numValues","output","i","convertNumbersToZero","getAnimatableNone","parsed","transformer","complex","maxDefaults","Set","applyDefaultFilter","slice","name","defaultValue","has","functionRegex","filter","functions","join"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\n\nvar clamp = function (min, max) { return function (v) {\n    return Math.max(Math.min(v, max), min);\n}; };\nvar sanitize = function (v) { return (v % 1 ? Number(v.toFixed(5)) : v); };\nvar floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))/gi;\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2,3}\\s*\\/*\\s*[\\d\\.]+%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nvar number = {\n    test: function (v) { return typeof v === 'number'; },\n    parse: parseFloat,\n    transform: function (v) { return v; },\n};\nvar alpha = tslib.__assign(tslib.__assign({}, number), { transform: clamp(0, 1) });\nvar scale = tslib.__assign(tslib.__assign({}, number), { default: 1 });\n\nvar createUnitType = function (unit) { return ({\n    test: function (v) {\n        return isString(v) && v.endsWith(unit) && v.split(' ').length === 1;\n    },\n    parse: parseFloat,\n    transform: function (v) { return \"\" + v + unit; },\n}); };\nvar degrees = createUnitType('deg');\nvar percent = createUnitType('%');\nvar px = createUnitType('px');\nvar vh = createUnitType('vh');\nvar vw = createUnitType('vw');\nvar progressPercentage = tslib.__assign(tslib.__assign({}, percent), { parse: function (v) { return percent.parse(v) / 100; }, transform: function (v) { return percent.transform(v * 100); } });\n\nvar isColorString = function (type, testProp) { return function (v) {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n}; };\nvar splitColor = function (aName, bName, cName) { return function (v) {\n    var _a;\n    if (!isString(v))\n        return v;\n    var _b = v.match(floatRegex), a = _b[0], b = _b[1], c = _b[2], alpha = _b[3];\n    return _a = {},\n        _a[aName] = parseFloat(a),\n        _a[bName] = parseFloat(b),\n        _a[cName] = parseFloat(c),\n        _a.alpha = alpha !== undefined ? parseFloat(alpha) : 1,\n        _a;\n}; };\n\nvar hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: function (_a) {\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nvar clampRgbUnit = clamp(0, 255);\nvar rgbUnit = tslib.__assign(tslib.__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\nvar rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: function (_a) {\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;\n        return 'rgba(' +\n            rgbUnit.transform(red) +\n            ', ' +\n            rgbUnit.transform(green) +\n            ', ' +\n            rgbUnit.transform(blue) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')';\n    },\n};\n\nfunction parseHex(v) {\n    var r = '';\n    var g = '';\n    var b = '';\n    var a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nvar hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nvar color = {\n    test: function (v) { return rgba.test(v) || hex.test(v) || hsla.test(v); },\n    parse: function (v) {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: function (v) {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nvar colorToken = '${c}';\nvar numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    var values = [];\n    var numColors = 0;\n    var colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push.apply(values, colors.map(color.parse));\n    }\n    var numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push.apply(values, numbers.map(number.parse));\n    }\n    return { values: values, numColors: numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    var _a = analyse(v), values = _a.values, numColors = _a.numColors, tokenised = _a.tokenised;\n    var numValues = values.length;\n    return function (v) {\n        var output = tokenised;\n        for (var i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nvar convertNumbersToZero = function (v) {\n    return typeof v === 'number' ? 0 : v;\n};\nfunction getAnimatableNone(v) {\n    var parsed = parse(v);\n    var transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nvar complex = { test: test, parse: parse, createTransformer: createTransformer, getAnimatableNone: getAnimatableNone };\n\nvar maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    var _a = v.slice(0, -1).split('('), name = _a[0], value = _a[1];\n    if (name === 'drop-shadow')\n        return v;\n    var number = (value.match(floatRegex) || [])[0];\n    if (!number)\n        return v;\n    var unit = value.replace(number, '');\n    var defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nvar functionRegex = /([a-z-]*)\\(.*?\\)/g;\nvar filter = tslib.__assign(tslib.__assign({}, complex), { getAnimatableNone: function (v) {\n        var functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexports.alpha = alpha;\nexports.color = color;\nexports.complex = complex;\nexports.degrees = degrees;\nexports.filter = filter;\nexports.hex = hex;\nexports.hsla = hsla;\nexports.number = number;\nexports.percent = percent;\nexports.progressPercentage = progressPercentage;\nexports.px = px;\nexports.rgbUnit = rgbUnit;\nexports.rgba = rgba;\nexports.scale = scale;\nexports.vh = vh;\nexports.vw = vw;\n"]},"metadata":{},"sourceType":"script"}