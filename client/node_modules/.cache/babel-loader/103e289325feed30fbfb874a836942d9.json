{"ast":null,"code":"//reducers\nimport { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'; //renamed state to posts because the state here is always some post\n\nconst reducer = function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n    // for both update and like\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => {\n        return post._id !== action.payload;\n      });\n\n    default:\n      return posts;\n  }\n}; //we will use this in the combineReducers function in the index.js file in the same folder\n\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/nivin/Desktop/Projects/React/WITblog/MERNstackProj/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","reducer","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA;AACA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAgD,0BAAhD,C,CAEA;;AACA,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAEpC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,SAAL;AACI,aAAOM,MAAM,CAACE,OAAd;;AAEJ,SAAKP,MAAL;AACI,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AAGJ;;AACA,SAAKN,MAAL;AACI,aAAOG,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAiCL,MAAM,CAACE,OAAxC,GAAkDE,IAAtE,CAAP;;AAEJ,SAAKP,MAAL;AACI,aAAOE,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAW;AAAC,eAAOA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3B;AAAoC,OAA7D,CAAP;;AAGJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,CArBD,C,CAuBA;;;AACA,eAAeD,OAAf","sourcesContent":["//reducers\r\nimport {FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes';\r\n\r\n//renamed state to posts because the state here is always some post\r\nconst reducer = (posts = [], action) => {\r\n    \r\n    switch(action.type){\r\n        case FETCH_ALL: \r\n            return action.payload;\r\n\r\n        case CREATE: \r\n            return [...posts, action.payload];\r\n        \r\n\r\n        // for both update and like\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id? action.payload : post );\r\n\r\n        case DELETE:\r\n            return posts.filter((post) =>  {return(post._id !== action.payload)});\r\n\r\n\r\n        default: \r\n            return posts;\r\n    }\r\n}\r\n\r\n//we will use this in the combineReducers function in the index.js file in the same folder\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}