{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nivin\\\\Desktop\\\\Projects\\\\React\\\\WITblog\\\\MERNstackProj\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'; // import FileBase from 'react-file-base64';\n\nimport useStyles from './stylesForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts'; //To update, we've to somehow get the id of the post we're on, you'll have to get that from the post component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    details: '',\n    deadline: '',\n    tags: '',\n    selectedFile: '' //this is for the image which will be converted to a base64 string\n\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //once the action is dispatched here, go to the reducers\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    } else {\n      dispatch(createPost(postData));\n      clear();\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      details: '',\n      deadline: '',\n      tags: '',\n      selectedFile: '' //this is for the image which will be converted to a base64 string\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        margin: '15px 0px',\n        color: '#470465',\n        textAlign: 'center'\n      },\n      variant: \"h6\",\n      children: [currentId ? 'Editing' : 'Creating', \" a post\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"details\",\n        variant: \"outlined\",\n        label: \"Details\",\n        value: postData.details,\n        onChange: e => setPostData({ ...postData,\n          details: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"deadline\",\n        variant: \"outlined\",\n        label: \"Deadline\",\n        value: postData.deadline,\n        onChange: e => setPostData({ ...postData,\n          deadline: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullwidth: true,\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"large\",\n          type: \"submit\",\n          onClick: clear,\n          fullwidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Form, \"BmwvogzVfr257o2PZ7ikb45hc9M=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form; //to add the post to the database, go to api and make a post request using axios \n// <div className={classes.fileInput}>\n// <FileBase \n//     type=\"file\"\n//     multiple={false}\n//     onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\n// />\n// </div>\n//style={{width: '90%'}}\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/nivin/Desktop/Projects/React/WITblog/MERNstackProj/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useStyles","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","details","deadline","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","margin","color","textAlign","root","form","target","value","split","buttons","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,KAAvC,QAAmD,mBAAnD,C,CACA;;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,qBAArC,C,CAGA;;;;AAEA,SAASC,IAAT,OAAyC;AAAA;;AAAA,MAA3B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA2B;AAErC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACrCgB,IAAAA,OAAO,EAAC,EAD6B;AAErCC,IAAAA,KAAK,EAAC,EAF+B;AAGrCC,IAAAA,OAAO,EAAC,EAH6B;AAIrCC,IAAAA,QAAQ,EAAC,EAJ4B;AAKrCC,IAAAA,IAAI,EAAC,EALgC;AAMrCC,IAAAA,YAAY,EAAC,EANwB,CAMrB;;AANqB,GAAD,CAAxC;AASA,QAAMC,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWX,SAAS,GAAEW,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUf,SAAlC,CAAF,GAAgD,IAArE,CAAxB;AAEA,QAAMgB,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAMuB,QAAQ,GAAGtB,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGqB,IAAH,EAASP,WAAW,CAACO,IAAD,CAAX;AACZ,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMQ,YAAY,GAAIC,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAGvB;;AAEA,QAAGpB,SAAH,EAAa;AACTiB,MAAAA,QAAQ,CAACnB,UAAU,CAACE,SAAD,EAAYE,QAAZ,CAAX,CAAR;AACAmB,MAAAA,KAAK;AACR,KAHD,MAII;AACAJ,MAAAA,QAAQ,CAACpB,UAAU,CAACK,QAAD,CAAX,CAAR;AACAmB,MAAAA,KAAK;AACR;AACJ,GAbD;;AAeA,QAAMA,KAAK,GAAG,MAAK;AACfpB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAAE;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,OAAO,EAAC,EAHC;AAITC,MAAAA,QAAQ,EAAC,EAJA;AAKTC,MAAAA,IAAI,EAAC,EALI;AAMTC,MAAAA,YAAY,EAAC,EANJ,CAMO;;AANP,KAAF,CAAX;AAQH,GAVD;;AAYA,sBACQ,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEO,OAAO,CAACM,KAA1B;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,UAAT;AAAsBC,QAAAA,KAAK,EAAE,SAA7B;AAAyCC,QAAAA,SAAS,EAAC;AAAnD,OAAnB;AAAkF,MAAA,OAAO,EAAC,IAA1F;AAAA,iBAAgGzB,SAAS,GAAE,SAAF,GAAY,UAArH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,UAAU,MAAnC;AAAoC,MAAA,SAAS,EAAG,GAAEgB,OAAO,CAACU,IAAK,IAAGV,OAAO,CAACW,IAAK,EAA/E;AAAkF,MAAA,QAAQ,EAAET,YAA5F;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,KAAK,EAAEhB,QAAQ,CAACE,OAJpB;AAKI,QAAA,QAAQ,EAAGe,CAAD,IAAOhB,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,UAAAA,OAAO,EAAEe,CAAC,CAACS,MAAF,CAASC;AAAhC,SAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,KAAK,EAAE3B,QAAQ,CAACG,KAJpB;AAKI,QAAA,QAAQ,EAAGc,CAAD,IAAOhB,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcG,UAAAA,KAAK,EAAEc,CAAC,CAACS,MAAF,CAASC;AAA9B,SAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,KAAK,EAAE3B,QAAQ,CAACI,OAJpB;AAKI,QAAA,QAAQ,EAAGa,CAAD,IAAOhB,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcI,UAAAA,OAAO,EAAEa,CAAC,CAACS,MAAF,CAASC;AAAhC,SAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAyBI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,MAHV;AAII,QAAA,KAAK,EAAE3B,QAAQ,CAACM,IAJpB;AAKI,QAAA,QAAQ,EAAGW,CAAD,IAAOhB,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcM,UAAAA,IAAI,EAAEW,CAAC,CAACS,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB;AAApB,SAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cAzBJ,eAiCI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,UAHV;AAII,QAAA,KAAK,EAAE5B,QAAQ,CAACK,QAJpB;AAKI,QAAA,QAAQ,EAAGY,CAAD,IAAOhB,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcK,UAAAA,QAAQ,EAAEY,CAAC,CAACS,MAAF,CAASC;AAAjC,SAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cAjCJ,eA0CI;AAAK,QAAA,SAAS,EAAEb,OAAO,CAACe,OAAxB;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEf,OAAO,CAACgB,MAA3B;AAAmC,UAAA,OAAO,EAAEd,YAA5C;AAA0D,UAAA,OAAO,EAAC,WAAlE;AAA8E,UAAA,KAAK,EAAC,SAApF;AAA8F,UAAA,IAAI,EAAC,OAAnG;AAA2G,UAAA,IAAI,EAAC,QAAhH;AAAyH,UAAA,SAAS,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEF,OAAO,CAACgB,MAA3B;AAAmC,UAAA,OAAO,EAAC,WAA3C;AAAuD,UAAA,KAAK,EAAC,WAA7D;AAAyE,UAAA,IAAI,EAAC,OAA9E;AAAsF,UAAA,IAAI,EAAC,QAA3F;AAAoG,UAAA,OAAO,EAAEX,KAA7G;AAAoH,UAAA,SAAS,MAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAwDH;;GAvGQtB,I;UAWQH,W,EAEGF,S,EACCC,W;;;KAdZI,I;AAyGT,eAAeA,IAAf,C,CAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\n// import FileBase from 'react-file-base64';\r\nimport useStyles from './stylesForm';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {createPost, updatePost} from '../../actions/posts';\r\n\r\n\r\n//To update, we've to somehow get the id of the post we're on, you'll have to get that from the post component\r\n\r\nfunction Form({currentId, setCurrentId}) {\r\n\r\n    const [postData, setPostData] = useState({\r\n        creator:'',\r\n        title:'',\r\n        details:'',\r\n        deadline:'',\r\n        tags:'',\r\n        selectedFile:'' //this is for the image which will be converted to a base64 string\r\n    })\r\n\r\n    const post = useSelector((state) => currentId? state.posts.find((p) => p._id === currentId): null);\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        //once the action is dispatched here, go to the reducers\r\n\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, postData));\r\n            clear();\r\n        }\r\n        else{\r\n            dispatch(createPost(postData));\r\n            clear();\r\n        }\r\n    }\r\n\r\n    const clear = () =>{\r\n        setCurrentId(null);\r\n        setPostData ({\r\n            creator:'',\r\n            title:'',\r\n            details:'',\r\n            deadline:'',\r\n            tags:'',\r\n            selectedFile:'' //this is for the image which will be converted to a base64 string\r\n        });\r\n    } \r\n\r\n    return (\r\n            <Paper className={classes.paper}>\r\n                <Typography style={{margin: '15px 0px',  color: '#470465',  textAlign:'center'}}  variant=\"h6\">{currentId? 'Editing':'Creating'} a post</Typography>\r\n                <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        name=\"creator\"\r\n                        variant=\"outlined\"\r\n                        label=\"Creator\"\r\n                        value={postData.creator}\r\n                        onChange={(e) => setPostData({...postData, creator: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"title\"\r\n                        variant=\"outlined\"\r\n                        label=\"Title\"\r\n                        value={postData.title}\r\n                        onChange={(e) => setPostData({...postData, title: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"details\"\r\n                        variant=\"outlined\"\r\n                        label=\"Details\"\r\n                        value={postData.details}\r\n                        onChange={(e) => setPostData({...postData, details: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"tags\"\r\n                        variant=\"outlined\"\r\n                        label=\"Tags\"\r\n                        value={postData.tags}\r\n                        onChange={(e) => setPostData({...postData, tags: e.target.value.split(',')})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"deadline\"\r\n                        variant=\"outlined\"\r\n                        label=\"Deadline\"\r\n                        value={postData.deadline}\r\n                        onChange={(e) => setPostData({...postData, deadline: e.target.value})}\r\n                    />\r\n\r\n                  \r\n                    <div className={classes.buttons}>\r\n                        <Button className={classes.button} onClick={handleSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullwidth>\r\n                            Add Post\r\n                        </Button>\r\n                        <Button className={classes.button} variant=\"contained\" color=\"secondary\" size=\"large\" type=\"submit\" onClick={clear} fullwidth>\r\n                            Clear\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n//to add the post to the database, go to api and make a post request using axios \r\n\r\n\r\n\r\n// <div className={classes.fileInput}>\r\n// <FileBase \r\n//     type=\"file\"\r\n//     multiple={false}\r\n//     onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\r\n// />\r\n// </div>\r\n\r\n\r\n//style={{width: '90%'}}\r\n"]},"metadata":{},"sourceType":"module"}