{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nivin\\\\Desktop\\\\Projects\\\\React\\\\WITblog\\\\MERNstackProj\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'; // import FileBase from 'react-file-base64';\n\nimport useStyles from './stylesForm';\nimport { useDispatch } from 'react-redux';\nimport { createPost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    details: '',\n    deadline: '',\n    tags: '',\n    selectedFile: '' //this is for the image which will be converted to a base64 string\n\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createPost(postData)); //once the action is dispatched here, go to the reducers\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Creating a post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"creator\",\n          variant: \"outlined\",\n          label: \"Creator\",\n          fullwidth: true,\n          value: postData.creator,\n          onChange: e => setPostData({ ...postData,\n            creator: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullwidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"details\",\n          variant: \"outlined\",\n          label: \"Details\",\n          fullwidth: true,\n          value: postData.details,\n          onChange: e => setPostData({ ...postData,\n            details: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags\",\n          fullwidth: true,\n          value: postData.tags,\n          onChange: e => setPostData({ ...postData,\n            tags: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"deadline\",\n          variant: \"outlined\",\n          label: \"Deadline\",\n          fullwidth: true,\n          value: postData.deadline,\n          onChange: e => setPostData({ ...postData,\n            deadline: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          onClick: handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullwidth: true,\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"large\",\n          type: \"submit\",\n          onClick: clear,\n          fullwidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"TrTeu9ThYLGwpJJRKPo9+k3YQ2o=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form; //to add the post to the database, go to api and make a post request using axios \n// <div className={classes.fileInput}>\n// <FileBase \n//     type=\"file\"\n//     multiple={false}\n//     onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\n// />\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/nivin/Desktop/Projects/React/WITblog/MERNstackProj/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","useStyles","useDispatch","createPost","Form","postData","setPostData","creator","title","details","deadline","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","buttonSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,KAAvC,QAAmD,mBAAnD,C,CACA;;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,QAAyB,qBAAzB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACrCW,IAAAA,OAAO,EAAC,EAD6B;AAErCC,IAAAA,KAAK,EAAC,EAF+B;AAGrCC,IAAAA,OAAO,EAAC,EAH6B;AAIrCC,IAAAA,QAAQ,EAAC,EAJ4B;AAKrCC,IAAAA,IAAI,EAAC,EALgC;AAMrCC,IAAAA,YAAY,EAAC,EANwB,CAMrB;;AANqB,GAAD,CAAxC;AASA,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAM;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,QAAQ,CAACX,UAAU,CAACE,QAAD,CAAX,CAAR,CAHuB,CAIvB;AACH,GALD;;AAOA,QAAMa,KAAK,GAAG,MAAK,CAElB,CAFD;;AAIA,sBACI;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEL,OAAO,CAACM,KAA1B;AAAA,6BACI;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAyB,QAAA,UAAU,MAAnC;AAAoC,QAAA,SAAS,EAAG,GAAEN,OAAO,CAACO,IAAK,IAAGP,OAAO,CAACQ,IAAK,EAA/E;AAAkF,QAAA,QAAQ,EAAEN,YAA5F;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,KAAK,EAAC,SAHV;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAEV,QAAQ,CAACE,OALpB;AAMI,UAAA,QAAQ,EAAGS,CAAD,IAAOV,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcE,YAAAA,OAAO,EAAES,CAAC,CAACM,MAAF,CAASC;AAAhC,WAAD;AANhC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,KAAK,EAAC,OAHV;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAElB,QAAQ,CAACG,KALpB;AAMI,UAAA,QAAQ,EAAGQ,CAAD,IAAOV,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcG,YAAAA,KAAK,EAAEQ,CAAC,CAACM,MAAF,CAASC;AAA9B,WAAD;AANhC;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAoBI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,KAAK,EAAC,SAHV;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAElB,QAAQ,CAACI,OALpB;AAMI,UAAA,QAAQ,EAAGO,CAAD,IAAOV,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcI,YAAAA,OAAO,EAAEO,CAAC,CAACM,MAAF,CAASC;AAAhC,WAAD;AANhC;AAAA;AAAA;AAAA;AAAA,gBApBJ,eA6BI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,KAAK,EAAC,MAHV;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAElB,QAAQ,CAACM,IALpB;AAMI,UAAA,QAAQ,EAAGK,CAAD,IAAOV,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcM,YAAAA,IAAI,EAAEK,CAAC,CAACM,MAAF,CAASC;AAA7B,WAAD;AANhC;AAAA;AAAA;AAAA;AAAA,gBA7BJ,eAsCI,QAAC,SAAD;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,KAAK,EAAC,UAHV;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAElB,QAAQ,CAACK,QALpB;AAMI,UAAA,QAAQ,EAAGM,CAAD,IAAOV,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcK,YAAAA,QAAQ,EAAEM,CAAC,CAACM,MAAF,CAASC;AAAjC,WAAD;AANhC;AAAA;AAAA;AAAA;AAAA,gBAtCJ,eAiDI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEV,OAAO,CAACW,YAA3B;AAAyC,UAAA,OAAO,EAAET,YAAlD;AAAgE,UAAA,OAAO,EAAC,WAAxE;AAAoF,UAAA,KAAK,EAAC,SAA1F;AAAoG,UAAA,IAAI,EAAC,OAAzG;AAAiH,UAAA,IAAI,EAAC,QAAtH;AAA+H,UAAA,SAAS,MAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjDJ,eAoDI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,KAAK,EAAC,WAAlC;AAA8C,UAAA,IAAI,EAAC,OAAnD;AAA2D,UAAA,IAAI,EAAC,QAAhE;AAAyE,UAAA,OAAO,EAAEG,KAAlF;AAAyF,UAAA,SAAS,MAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+DH;;GAxFQd,I;UAWWH,S,EACCC,W;;;KAZZE,I;AA0FT,eAAeA,IAAf,C,CAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\n// import FileBase from 'react-file-base64';\r\nimport useStyles from './stylesForm';\r\nimport {useDispatch} from 'react-redux';\r\nimport {createPost} from '../../actions/posts';\r\n\r\nfunction Form() {\r\n\r\n    const [postData, setPostData] = useState({\r\n        creator:'',\r\n        title:'',\r\n        details:'',\r\n        deadline:'',\r\n        tags:'',\r\n        selectedFile:'' //this is for the image which will be converted to a base64 string\r\n    })\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        dispatch(createPost(postData))\r\n        //once the action is dispatched here, go to the reducers\r\n    }\r\n\r\n    const clear = () =>{\r\n\r\n    } \r\n\r\n    return (\r\n        <div id=\"form\">\r\n            <Paper className={classes.paper}>\r\n                <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                    <Typography variant=\"h6\">Creating a post</Typography>\r\n                    <TextField\r\n                        name=\"creator\"\r\n                        variant=\"outlined\"\r\n                        label=\"Creator\"\r\n                        fullwidth\r\n                        value={postData.creator}\r\n                        onChange={(e) => setPostData({...postData, creator: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"title\"\r\n                        variant=\"outlined\"\r\n                        label=\"Title\"\r\n                        fullwidth\r\n                        value={postData.title}\r\n                        onChange={(e) => setPostData({...postData, title: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"details\"\r\n                        variant=\"outlined\"\r\n                        label=\"Details\"\r\n                        fullwidth\r\n                        value={postData.details}\r\n                        onChange={(e) => setPostData({...postData, details: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"tags\"\r\n                        variant=\"outlined\"\r\n                        label=\"Tags\"\r\n                        fullwidth\r\n                        value={postData.tags}\r\n                        onChange={(e) => setPostData({...postData, tags: e.target.value})}\r\n                    />\r\n\r\n                    <TextField\r\n                        name=\"deadline\"\r\n                        variant=\"outlined\"\r\n                        label=\"Deadline\"\r\n                        fullwidth\r\n                        value={postData.deadline}\r\n                        onChange={(e) => setPostData({...postData, deadline: e.target.value})}\r\n                    />\r\n\r\n                  \r\n\r\n                    <Button className={classes.buttonSubmit} onClick={handleSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullwidth>\r\n                        Add Post\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" type=\"submit\" onClick={clear} fullwidth>\r\n                        Clear\r\n                    </Button>\r\n\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n//to add the post to the database, go to api and make a post request using axios \r\n\r\n\r\n\r\n// <div className={classes.fileInput}>\r\n// <FileBase \r\n//     type=\"file\"\r\n//     multiple={false}\r\n//     onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\r\n// />\r\n// </div>\r\n"]},"metadata":{},"sourceType":"module"}